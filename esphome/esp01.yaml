esphome:
  name: esp01
  platform: ESP8266
  board: d1_mini

# WiFi connection, correct these
# with values for your WiFi.
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: esp01

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret esphome_esp01_api_password

# Enable over-the-air updates
ota:
  password: !secret esphome_esp01_ota_password

# Enable Web server
web_server:
  port: 80
    
# Text sensors with general information
text_sensor:
  - platform: wifi_info
    ip_address:
      name: esphome_esp01_ip
    ssid:
      name: esphome_esp01_ssid
    bssid:
      name: esphome_esp01_bssid
      
sensor:
  # WiFi Signal sensor
  - platform: wifi_signal
    name: esphome_esp01_wifi_signal
    update_interval: 60s

globals:
  - id: chime
    type: bool
    restore_value: true
    initial_value: 'true'

switch:
  # Switch to restart the plug
  - platform: restart
    name: esphome_esp01_restart
  # Switch to toggle the relay
  - platform: gpio
    id: relay
    inverted: true
    name: esphome_esp01_switch
    pin:
      number: D1
  - platform: template
    name: esphome_esp01_chime
    id: chime_switch
    restore_state: false
    turn_on_action:
      - globals.set:
          id: chime
          value: 'true'
    turn_off_action:
      - globals.set:
          id: chime
          value: 'false'
    lambda: |-
      return id(chime);
            
binary_sensor:
  - platform: gpio
    id: button
    name: esphome_esp01_button
    pin:
      number: D2
      mode: INPUT_PULLUP
      inverted: true
    filters:
      # Small filter, to debounce the button press.
      - delayed_on: 25ms
      - delayed_off: 3000ms
    on_press:
      # Only turn on the chime when it is active.
      then:
        if:
          condition:
            - switch.is_on: chime_switch
          then:
            - switch.turn_on: relay
            - delay: 250ms
            - switch.turn_off: relay